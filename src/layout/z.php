<?php

declare(strict_types=1);

###############################################################################################################
###############################################################################################################
##                                                                                                           ##
##  ######################     #####            #####     #####            #####     ######################  ##
##  ######################     #####            #####     #####            #####     ######################  ##
##  ######################     ######           #####     #####            #####     ######################  ##
##  ######################     #######          #####     #####            #####     ######################  ##
##  ######################     ########         #####     #####            #####     ######################  ##
##  #####            #####     #########        #####     #####            #####     #####                   ##
##  #####            #####     ##########       #####     #####            #####     #####     .COM.BR       ##
##  #####            #####     ##### #####      #####     ######################     ######################  ##
##  #####            #####     #####  #####     #####     ######################     ######################  ##
##  ######################     #####   #####    #####     ######################     ######################  ##
##  ######################     #####    #####   #####     ######################     ######################  ##
##  ######################     #####     #####  #####     ######################     ######################  ##
##  ######################     #####      ##### #####     #####            #####                      #####  ##
##  ######################     #####       ##########     #####            #####                      #####  ##
##  #####                      #####        #########     #####            #####     ######################  ##
##  #####                      #####         ########     #####            #####     ######################  ##
##  #####                      #####          #######     #####            #####     ######################  ##
##  #####                      #####           ######     #####            #####     ######################  ##
##  #####                      #####            #####     #####            #####     ######################  ##
##                                                                                                           ##
###############################################################################################################
##                   TODOS OS DIREITOS RESERVADOS  O SENHOR E MEU PASTOR E NADA ME FALTARÁ                   ##
###############################################################################################################
###############################################################################################################
###############################################################################################################
##                                          INICIO CÓDIGO DE FONTE!                                          ##
###############################################################################################################

namespace Pnhs\ParserNF\layout;

use stdClass;

class z extends layout
{
  public static function run(object $data): stdClass
  {
    $std = new stdClass;

    $parser = $data->NFe->infNFe->infAdic;

    if (!$parser)
      return $std;

    $std->infAdFisco      = self::tag((string) $parser->infAdFisco, 'infAdFisco não informado', 'Z02', 0);
    $std->infCpl          = self::tag((string) $parser->infCpl, 'infCpl não informado', 'Z03', 0);

    $i = 0;
    $r = [];
    foreach ($parser->obsCont as $item) {
      $r[$i]['xCampo']    = self::tag((string) $item->xCampo, 'xCampo não informado', 'Z05', 1);
      $r[$i]['xTexto']    = self::tag((string) $item->xTexto, 'xTexto não informado', 'Z06', 1);
      $i++;
    }
    $std->obsCont = $r;

    $i = 0;
    $r = [];
    foreach ($parser->obsFisco as $item) {
      $r[$i]['xCampo']    = self::tag((string) $item->xCampo, 'xCampo não informado', 'Z08', 1);
      $r[$i]['xTexto']    = self::tag((string) $item->xTexto, 'xTexto não informado', 'Z09', 1);
      $i++;
    }
    $std->obsFisco = $r;

    $i = 0;
    $r = [];
    foreach ($parser->procRef as $item) {
      $r[$i]['nProc']     = self::tag((string) $item->nProc, 'nProc não informado', 'Z11', 1);
      $r[$i]['indProc']   = self::tag((string) $item->indProc, 'indProc não informado', 'Z12', 1);
      $i++;
    }
    $std->procRef = $r;

    return $std;
  }
}

<?php

declare(strict_types=1);

###############################################################################################################
###############################################################################################################
##                                                                                                           ##
##  ######################     #####            #####     #####            #####     ######################  ##
##  ######################     #####            #####     #####            #####     ######################  ##
##  ######################     ######           #####     #####            #####     ######################  ##
##  ######################     #######          #####     #####            #####     ######################  ##
##  ######################     ########         #####     #####            #####     ######################  ##
##  #####            #####     #########        #####     #####            #####     #####                   ##
##  #####            #####     ##########       #####     #####            #####     #####     .COM.BR       ##
##  #####            #####     ##### #####      #####     ######################     ######################  ##
##  #####            #####     #####  #####     #####     ######################     ######################  ##
##  ######################     #####   #####    #####     ######################     ######################  ##
##  ######################     #####    #####   #####     ######################     ######################  ##
##  ######################     #####     #####  #####     ######################     ######################  ##
##  ######################     #####      ##### #####     #####            #####                      #####  ##
##  ######################     #####       ##########     #####            #####                      #####  ##
##  #####                      #####        #########     #####            #####     ######################  ##
##  #####                      #####         ########     #####            #####     ######################  ##
##  #####                      #####          #######     #####            #####     ######################  ##
##  #####                      #####           ######     #####            #####     ######################  ##
##  #####                      #####            #####     #####            #####     ######################  ##
##                                                                                                           ##
###############################################################################################################
##                   TODOS OS DIREITOS RESERVADOS  O SENHOR E MEU PASTOR E NADA ME FALTARÁ                   ##
###############################################################################################################
###############################################################################################################
###############################################################################################################
##                                          INICIO CÓDIGO DE FONTE!                                          ##
###############################################################################################################

namespace Pnhs\ParserNF\layout;

use stdClass;

class zc extends layout
{
  public static function run(object $data): stdClass
  {
    $std = new stdClass;

    $parser = $data->NFe->infNFe->cana;

    if (!$parser)
      return $std;

    $std->safra           = self::tag((string) $parser->safra, 'safra não informado', 'ZC02', 1);
    $std->ref             = self::tag((string) $parser->ref, 'ref não informado', 'ZC03', 1);

    $i = 0;
    $r = [];
    foreach ($parser->forDia as $item) {
      $r[$i]['dia']       = self::tag((string) $item->dia, 'dia não informado', 'ZC05', 1);
      $r[$i]['qtde']      = self::tag((string) $item->qtde, 'qtde não informado', 'ZC06', 1);
      $r[$i]['qTotMes']   = self::tag((string) $item->qTotMes, 'qTotMes não informado', 'ZC07', 1);
      $r[$i]['qTotAnt']   = self::tag((string) $item->qTotAnt, 'qTotAnt não informado', 'ZC08', 1);
      $r[$i]['qTotGer']   = self::tag((string) $item->qTotGer, 'qTotGer não informado', 'ZC09', 1);
      $i++;
    }
    $std->forDia = $r;

    $i = 0;
    $r = [];
    foreach ($parser->deduc as $item) {
      $r[$i]['xDed']      = self::tag((string) $item->xDed, 'xDed não informado', 'ZC11', 1);
      $r[$i]['vDed']      = self::tag((string) $item->vDed, 'vDed não informado', 'ZC12', 1);
      $r[$i]['vFor']      = self::tag((string) $item->vFor, 'vFor não informado', 'ZC13', 1);
      $r[$i]['vTotDed']   = self::tag((string) $item->vTotDed, 'vTotDed não informado', 'ZC14', 1);
      $r[$i]['vLiqFor']   = self::tag((string) $item->vLiqFor, 'vLiqFor não informado', 'ZC15', 1);
      $i++;
    }
    $std->deduc = $r;

    return $std;
  }
}
